/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package universidadulp.vistas;

import java.util.ArrayList;
import java.util.List;
import javax.swing.ComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import universidadulp.accesoADatos.AlumnoData;
import universidadulp.accesoADatos.InscripcionData;
import universidadulp.accesoADatos.MateriaData;
import universidadulp.entidades.Alumno;
import universidadulp.entidades.Inscripcion;
import universidadulp.entidades.Materia;

/**
 *
 * @author marti
 */
public class FormularioInscripcion extends javax.swing.JInternalFrame {
    private AlumnoData ad = new AlumnoData();
    private InscripcionData ID = new InscripcionData();
    private List <Materia> materias = new ArrayList<>();
    private List<Alumno> alumnos;
    private MateriaData MD = new MateriaData();
    private DefaultTableModel jInscripcion = new DefaultTableModel(){
        public boolean isCellEditable(int f, int c) {
            return false;
        }
    };
    /**
     * Creates new form FormularioInscripcion
     */

    public FormularioInscripcion() {
        initComponents();
        cabecera();
        armarComboB();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jrMateriasNoInscriptas = new javax.swing.JRadioButton();
        jrMateriasInscriptas = new javax.swing.JRadioButton();
        jbInscribir = new javax.swing.JButton();
        jbAnularInscripcion = new javax.swing.JButton();
        jbSalirInscripcion = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtInscripcion = new javax.swing.JTable();
        jcAlumnoSeleccionado = new javax.swing.JComboBox<>();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jLabel1.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel1.setText("FORMULARIO INSCRIPCION");

        jLabel2.setText("Seleccionar un Alumno");

        jLabel3.setText("Listado de Materias");

        jrMateriasNoInscriptas.setText("Materias no Inscriptas");
        jrMateriasNoInscriptas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrMateriasNoInscriptasActionPerformed(evt);
            }
        });

        jrMateriasInscriptas.setText("Materias Inscriptas");
        jrMateriasInscriptas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrMateriasInscriptasActionPerformed(evt);
            }
        });

        jbInscribir.setText("Inscribir");
        jbInscribir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbInscribirActionPerformed(evt);
            }
        });

        jbAnularInscripcion.setText("Anular Inscripcion");
        jbAnularInscripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAnularInscripcionActionPerformed(evt);
            }
        });

        jbSalirInscripcion.setText("Salir");
        jbSalirInscripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirInscripcionActionPerformed(evt);
            }
        });

        jtInscripcion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jtInscripcion);

        jcAlumnoSeleccionado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcAlumnoSeleccionadoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(212, 212, 212)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(141, 141, 141)
                                .addComponent(jcAlumnoSeleccionado, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jrMateriasInscriptas)
                                .addGap(102, 102, 102)
                                .addComponent(jrMateriasNoInscriptas)))))
                .addContainerGap(53, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(118, 118, 118))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jbInscribir)
                        .addGap(18, 18, 18)
                        .addComponent(jbAnularInscripcion)
                        .addGap(18, 18, 18)
                        .addComponent(jbSalirInscripcion)
                        .addGap(117, 117, 117))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jcAlumnoSeleccionado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrMateriasNoInscriptas)
                    .addComponent(jrMateriasInscriptas))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbSalirInscripcion)
                    .addComponent(jbAnularInscripcion)
                    .addComponent(jbInscribir))
                .addGap(31, 31, 31))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbAnularInscripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAnularInscripcionActionPerformed
        
        int fila = jtInscripcion.getSelectedRow();
        if (fila == -1){
            JOptionPane.showMessageDialog(null, "Seleccione una materia para anular su inscripci√≥n.");
        } else{
          Alumno alum = (Alumno) jcAlumnoSeleccionado.getModel().getSelectedItem();
          int mate = (int) jtInscripcion.getValueAt(fila, 0);
          String mater = (String) jtInscripcion.getValueAt(fila, 1);
          ID.borrarInscripcionMateriaAlumno(alum.getIdAlumno(), mate);
          JOptionPane.showMessageDialog(null,"Al alumno: "+ alum.getApellido() + " se le anulo la inscripci√≥n en la materia: "+ mater);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jbAnularInscripcionActionPerformed

    private void jbInscribirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbInscribirActionPerformed
        
        int fila = jtInscripcion.getSelectedRow();
        if (fila == -1){
            JOptionPane.showMessageDialog(null, "Seleccione una materia para inscribir al alumno.");
        } else{
          Alumno alum = (Alumno) jcAlumnoSeleccionado.getModel().getSelectedItem();
          Inscripcion insc = new Inscripcion();
          int mate = (int) jtInscripcion.getValueAt(fila, 0);
          insc.setMateria(MD.buscarMateria(mate));
          insc.setAlumno(alum);
          insc.setNota(0);
          ID.guardarInscripcion(insc);
          JOptionPane.showMessageDialog(null,"El alumno: "+ alum.getApellido() + " se inscribio con exito en la materia: "+ MD.buscarMateria(mate).getNombre());
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jbInscribirActionPerformed

    private void jbSalirInscripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirInscripcionActionPerformed
        
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jbSalirInscripcionActionPerformed

    private void jrMateriasInscriptasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrMateriasInscriptasActionPerformed
        if (jrMateriasInscriptas.isSelected()){
            jrMateriasNoInscriptas.setSelected(false);
            jbAnularInscripcion.setEnabled(true);
            jbInscribir.setEnabled(false);
        }
        borrarFilas();
        Alumno alum = (Alumno) jcAlumnoSeleccionado.getModel().getSelectedItem();
        materias = ID.obtenerMateriasCursadas(alum.getIdAlumno());
        for (Materia mate : materias) {
            
            jInscripcion.addRow(new Object[]{
            mate.getIdMateria(),
            mate.getNombre(),
            mate.getAnioMateria()});
            
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jrMateriasInscriptasActionPerformed

    private void jrMateriasNoInscriptasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrMateriasNoInscriptasActionPerformed
        if (jrMateriasNoInscriptas.isSelected()){
            jrMateriasInscriptas.setSelected(false);
            jbAnularInscripcion.setEnabled(false);
            jbInscribir.setEnabled(true);
        }
        borrarFilas();
        Alumno alum = (Alumno) jcAlumnoSeleccionado.getModel().getSelectedItem();
        materias = ID.obtenerMateriasNoCursadas(alum.getIdAlumno());
        for (Materia mate : materias) {
            
            jInscripcion.addRow(new Object[]{
            mate.getIdMateria(),
            mate.getNombre(),
            mate.getAnioMateria()});
            
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jrMateriasNoInscriptasActionPerformed

    private void jcAlumnoSeleccionadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcAlumnoSeleccionadoActionPerformed
        borrarFilas();
        jrMateriasInscriptas.setSelected(false);
        jrMateriasNoInscriptas.setSelected(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_jcAlumnoSeleccionadoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton jbAnularInscripcion;
    private javax.swing.JButton jbInscribir;
    private javax.swing.JButton jbSalirInscripcion;
    private javax.swing.JComboBox<Alumno> jcAlumnoSeleccionado;
    private javax.swing.JRadioButton jrMateriasInscriptas;
    private javax.swing.JRadioButton jrMateriasNoInscriptas;
    private javax.swing.JTable jtInscripcion;
    // End of variables declaration//GEN-END:variables

    private void cabecera() {

        jInscripcion.addColumn("ID");
        jInscripcion.addColumn("Nombre");
        jInscripcion.addColumn("A√±o");
        jtInscripcion.setModel(jInscripcion);

    }

    private void armarComboB() {

        AlumnoData ad = new AlumnoData();
        List<Alumno> alumnos;

        alumnos = ad.listarAlumnos();

        for (int i = 0; i < alumnos.size(); i++) {

            jcAlumnoSeleccionado.addItem(alumnos.get(i));
        }
    }
    
    private void borrarFilas() {
        int f = jtInscripcion.getRowCount() - 1;

        for (; f >= 0; f--) {
            jInscripcion.removeRow(f);
        }
    }
}
