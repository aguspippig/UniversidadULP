package universidadulp.vistas;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

//
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import universidadulp.accesoADatos.AlumnoData;
import universidadulp.accesoADatos.InscripcionData;
import universidadulp.entidades.*;

/**
 *
 * @author marti
 */
public class ManipulacionNotas extends javax.swing.JInternalFrame {

    private AlumnoData aluData = new AlumnoData();
    private InscripcionData inscData = new InscripcionData();
    private List<Alumno> listaAlumnos = new ArrayList<Alumno>();
    private List<Materia> listaMaterias = new ArrayList<Materia>();
    private List<Inscripcion> listaInscr = new ArrayList<Inscripcion>();

    private DefaultTableModel tNotas = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int f, int c) {
            if (c == 2) {
                return true;
            } else {
                return false;
            }
        }   
    //   
    
    };

    
    public ManipulacionNotas() {
        initComponents();
        Cabecera();
        armarComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jbSalirNotas = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtNotas = new javax.swing.JTable();
        jbGuardarNotas = new javax.swing.JButton();
        jcbAlumnos = new javax.swing.JComboBox<>();

        jLabel1.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel1.setText("CARGAR NOTAS");

        jLabel2.setText("Seleccionar Alumnos");

        jbSalirNotas.setText("Salir");
        jbSalirNotas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirNotasActionPerformed(evt);
            }
        });

        jtNotas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtNotas.setEditingColumn(2);
        jScrollPane2.setViewportView(jtNotas);

        jbGuardarNotas.setText("Guardar");
        jbGuardarNotas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardarNotasActionPerformed(evt);
            }
        });

        jcbAlumnos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbAlumnosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(157, 157, 157))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(jcbAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(143, 143, 143)
                        .addComponent(jbGuardarNotas)
                        .addGap(75, 75, 75)
                        .addComponent(jbSalirNotas)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jcbAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbSalirNotas)
                    .addComponent(jbGuardarNotas))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void jcbAlumnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbAlumnosActionPerformed

        borrarFilas();
        Alumno alumno = (Alumno) jcbAlumnos.getModel().getSelectedItem(); //queda seleccionado el objeto alumno

        listaInscr = inscData.obtenerInscripcionesPorAlumno(alumno.getIdAlumno());

        for (Inscripcion i : listaInscr) {
            tNotas.addRow(new Object[]{
                i.getIdInscripcion(),
                i.getMateria().getNombre(),
                i.getNota(),});
        }

    }//GEN-LAST:event_jcbAlumnosActionPerformed
    
    private void jbGuardarNotasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardarNotasActionPerformed

        int f= jtNotas.getSelectedRow();
        double nota=Double.parseDouble(jtNotas.getValueAt(f, 2).toString());
        
        int id=(Integer)tNotas.getValueAt(f, 0);
        
        for (Inscripcion i:listaInscr) {
            
            if(id==i.getIdInscripcion()){
                int idAlu, idMat;
                idAlu = i.getAlumno().getIdAlumno();
                idMat = i.getMateria().getIdMateria();

                inscData.actualizarNota(idAlu, idMat, nota);
            }
            
        }
        
    }//GEN-LAST:event_jbGuardarNotasActionPerformed

    private void jbSalirNotasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirNotasActionPerformed
        // TODO add your handling code here:
          this.dispose();
    }//GEN-LAST:event_jbSalirNotasActionPerformed

    
     
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbGuardarNotas;
    private javax.swing.JButton jbSalirNotas;
    private javax.swing.JComboBox<Alumno> jcbAlumnos;
    private javax.swing.JTable jtNotas;
    // End of variables declaration//GEN-END:variables

     private void Cabecera() {
        tNotas.addColumn("Codigo");
        tNotas.addColumn("Materia");
        tNotas.addColumn("Nota");
        jtNotas.setModel(tNotas);
        
    }
    
    private void armarComboBox(){
        listaAlumnos=aluData.listarAlumnos();
        
        for (int i = 0; i < listaAlumnos.size(); i++) {
            jcbAlumnos.addItem(listaAlumnos.get(i));
        }
            
        }
    
    private void borrarFilas(){
        int f=jtNotas.getRowCount() -1;
        
        for ( ; f >= 0; f--) {
            tNotas.removeRow(f);
        }
    } 

}//finclase
